{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","compose","connect","DialogItem","id","name","path","className","s","dialog","active","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessageCreator","newMessageBody"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,6JCI9KC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAOtC,OAAOM,YACHC,YAAQZ,GADLW,CAELL,K,2FCRSO,EAPI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACfC,EAAO,YAAcF,EAC3B,OAAO,qBAAKG,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASX,GAAIO,EAAb,SAAoBD,OCAbM,EAJC,SAACb,GACb,OAAO,qBAAKS,UAAWC,IAAEC,OAAlB,SAA2BX,EAAMc,W,0CCCtCC,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,2BAAjBD,EAdQ,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAC1CW,YAAY,qBAAqBnB,KAAK,qBAEjD,8BACI,kDCoBDoB,EA3BC,SAAC3B,GAEb,IAAMP,EAAQO,EAAM4B,YAEdC,EAAkBpC,EAAMqC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAiBD,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAC1E2B,EAAmBxC,EAAMyC,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE7B,OAMrF,OAAKN,EAAMN,OAGP,sBAAKe,UAAWC,IAAEoB,QAAlB,UACI,qBAAKrB,UAAWC,IAAE0B,aAAlB,SACKP,IAEL,qBAAKpB,UAAWC,IAAEwB,SAAlB,SACI,8BAAMD,MAGV,cAAC,EAAD,CAAgBd,SAfF,SAACkB,GACnBrC,EAAMsC,mBAAmBD,EAAOE,sBAGV,cAAC,IAAD,CAAUtC,GAAI,Y,yBCL7BE,sBACXC,aAPoB,SAACX,GACrB,MAAO,CACHmC,YAAanC,EAAMmC,eAKE,CAACU,yBAC1B1C,IAFWO,CAGbwB","file":"static/js/4.d5eab082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3jCTW\",\"dialogsItems\":\"Dialogs_dialogsItems__1m_oX\",\"active\":\"Dialogs_active__MeR7m\",\"messages\":\"Dialogs_messages__3pXqg\",\"message\":\"Dialogs_message__2Y9xT\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return compose(\r\n        connect(mapStateToPropsForRedirect)\r\n    )(RedirectComponent);\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    const path = '/dialogs/' + id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name='newMessageBody'/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const state = props.dialogsPage;\r\n\r\n    const dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    const messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessageCreator(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessageCreator}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}