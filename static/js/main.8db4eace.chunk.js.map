{"version":3,"sources":["assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/user.png","components/common/FormsControls/FormsControls.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.module.css","api/api.js","serviceWorker.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","redux/auth-reducer.js","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/hoc/withSuspense.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js"],"names":["Preloader","props","style","backgroundColor","src","preloader","module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","SEND_MESSAGE","initialState","dialogs","id","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispath","a","usersAPI","getUser","data","totalCount","count","followUnfollowFlow","dispatch","apiMethod","actionCreator","resultCode","unfollow","bind","follow","usersReducer","followed","filter","instanse","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","Boolean","window","location","hostname","match","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","s","myStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","onSubmit","formSummaryError","Object","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","editForm","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","onClickMode","setOnClickMode","descriptionBlock","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","savePhotoSuccess","getUserProfile","profileReducer","newPost","newPostText","p","postId","Post","item","likes","maxLength100","maxLengthCreator","Field","required","MyPosts","React","memo","addPostActionCreator","postsElements","reverse","postsBlock","headerPosts","values","compose","connect","profilePage","Profile","MyPostsContainer","ProfileContainer","this","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","Component","auth","isAuth","getState","stopSubmit","_error","Promise","reject","withRouter","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","LoginReduxForm","to","INITIALIZED_SUCCESS","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","usersPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","Header","Layout","span","theme","mode","defaultSelectedKeys","Item","alt","icon","UserOutlined","HeaderContainer","SubMenu","Menu","Content","Footer","Sider","DialogsContainer","lazy","UsersContainer","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","padding","margin","width","defaultOpenKeys","height","title","LaptopOutlined","minHeight","exact","path","render","textAlign","AppContainer","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","maxLength"],"mappings":"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","file":"static/js/main.8db4eace.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/preloader.5788b05c.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Kj36\",\"headerPosts\":\"MyPosts_headerPosts__lb7r-\",\"posts\":\"MyPosts_posts__c_f2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2nyj_\",\"messages\":\"Post_messages__2OJ7h\"};","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nexport const FormControl = ({ meta:{touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + '' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","const SEND_MESSAGE = 'dialogs/SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Ivan'},\r\n        {id: 2, name: 'Andriy'},\r\n        {id: 3, name: 'Igor'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Roman'},\r\n        {id: 6, name: 'Oleg'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your Roman?'},\r\n        {id: 3, message: 'Good day'},\r\n        {id: 4, message: 'Hello'},\r\n        {id: 5, message: 'What is your name?'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                // state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n/// ////////////////////////////     Thank\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispath) => {\r\n        dispath(toggleIsFetching(true));\r\n        dispath(setCurrentPage(page));\r\n        const data = await usersAPI.getUser(page, pageSize)\r\n        dispath(toggleIsFetching(false));\r\n        dispath(setUsers(data.items));\r\n        dispath(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccess);\r\n\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myStatus\":\"ProfileStatusWithHooks_myStatus__2K5_f\"};","import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:\r\n        {\r\n            \"API-KEY\": \"c6144fc0-750b-49fb-9bd4-700acb189ea5\"\r\n        }\r\n})\r\n\r\nexport const usersAPI = {\r\n\r\n     getUser(currentPage, pageSize) {\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    follow(userId) {\r\n        return instanse.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instanse.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instanse.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instanse.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instanse.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instanse.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instanse.put(`profile`, profile );\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instanse.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha=null) {\r\n        return instanse.post(`auth/login`, {email, password, rememberMe,captcha});\r\n    },\r\n    logout() {\r\n        return instanse.delete(`auth/login`);\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instanse.get(`security/get-captcha-url`);\r\n    },\r\n\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileStatusWithHooks.module.css';\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myStatus}>\r\n            {!editMode &&\r\n            <div>\r\n            <b>Status: </b><span onDoubleClick={activateEditMode}>\r\n                {props.status || \"----------\"}\r\n            </span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'profileData'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport {Button, Input} from 'antd';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [onClickMode, setOnClickMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n        setOnClickMode(false)\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n\r\n            }\r\n        );\r\n    }\r\n    const click = () => {\r\n        setOnClickMode(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} onClick={click}/>\r\n\r\n                {onClickMode &&\r\n                <div className={s.input}>\r\n                    {isOwner && <input type='file' onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n                }\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n\r\n    <div className={s.editForm}>\r\n            {isOwner && <div>\r\n                <Button type='primary' onClick={goToEditMode}>edit</Button>\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Hello', likesCount: 11},\r\n        {id: 4, message: 'Hy', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n/////// THANK\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (photos) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(photos);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"profileData\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({message, likesCount}) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS_2Bvz263wBzKVhuW8h8fYBk7guQbO2rVXqA&usqp=CAU'/>\r\n            <span className={s.messages}>\r\n            {message}\r\n            </span>\r\n            <div className={s.likes}>\r\n                <span>like</span> {likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name='newPostText' component={Textarea} validate={[required, maxLength100]}\r\n                   placeholder='Post message'/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nexport default reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddNewPostForm from './AddPostForm/AddPostForm';\r\n\r\nconst MyPosts = React.memo(({addPostActionCreator, posts}) => {\r\n    const postsElements =\r\n        [...posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    const onAddPost = (values) => {\r\n        addPostActionCreator(values.newPostText);\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2 className={s.headerPosts}>My posts</h2>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {addPostActionCreator} ))(MyPosts);","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile}\r\n                         savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         updateStatus={props.updateStatus}\r\n                         status={props.status}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer';\r\n\r\nimport {compose} from 'redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     savePhoto={this.props.savePhoto}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto,saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null   // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\n///////Thank\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe,captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {getCaptchaUrl, login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error,captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField('Symbols from image', 'captcha', [required], Input)}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login,getCaptchaUrl})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\n\r\nexport const Header = ({isAuth, login, logout}) => {\r\n\r\n    const {Header} = Layout\r\n\r\n    return (\r\n        <Header className='header'>\r\n            <Row>\r\n                <Col span={18}>\r\n                    <Menu theme='dark' mode='horizontal' defaultSelectedKeys={['2']}>\r\n                        <Menu.Item key='1'><Link to='/developers'>Developers</Link></Menu.Item>\r\n                    </Menu>\r\n                </Col>\r\n\r\n                {isAuth\r\n                    ? <>\r\n                        <Col span={1}>\r\n                            <Avatar alt={login || ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Button onClick={logout}>Log out</Button>\r\n                        </Col>\r\n                    </>\r\n                    : <Col span={6}>\r\n                        <Button>\r\n                            <Link to={'/login'}>Login</Link>\r\n                        </Button>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </Header>\r\n    )\r\n}","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\nimport {compose} from 'redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header{...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout}))(HeaderContainer) ;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Link, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./components/hoc/withSuspense\";\r\nimport {Breadcrumb, Layout, Menu} from \"antd\";\r\nimport 'antd/dist/antd.css';\r\nimport {LaptopOutlined, UserOutlined} from '@ant-design/icons';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Content, Footer, Sider} = Layout;\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\n\r\nclass App extends Component {\r\n\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        alert(`Some error occurred`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                <HeaderContainer/>\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\r\n                        <Sider className=\"site-layout-background\" width={200}>\r\n                            <Menu\r\n                                mode=\"inline\"\r\n                                defaultSelectedKeys={['1']}\r\n                                defaultOpenKeys={['sub1']}\r\n                                style={{height: '100%'}}\r\n                            >\r\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My profile\">\r\n                                    <Menu.Item key=\"1\"> <Link to=\"/profile\">Profile</Link></Menu.Item>\r\n                                    <Menu.Item key=\"2\"><Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n                                    <Menu.Item key=\"3\">option3</Menu.Item>\r\n                                    <Menu.Item key=\"4\">option4</Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\r\n                                    <Menu.Item key=\"5\"> <Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                                    {/*<Menu.Item key=\"6\">option6</Menu.Item>*/}\r\n                                    {/*<Menu.Item key=\"7\">option7</Menu.Item>*/}\r\n                                    {/*<Menu.Item key=\"8\">option8</Menu.Item>*/}\r\n                                </SubMenu>\r\n                                {/*<SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"subnav 3\">*/}\r\n                                {/*    <Menu.Item key=\"9\">option9</Menu.Item>*/}\r\n                                {/*    <Menu.Item key=\"10\">option10</Menu.Item>*/}\r\n                                {/*    <Menu.Item key=\"11\">option11</Menu.Item>*/}\r\n                                {/*    <Menu.Item key=\"12\">option12</Menu.Item>*/}\r\n                                {/*</SubMenu>*/}\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\r\n                            <Switch>\r\n                                <Route exact path='/'\r\n                                       render={() => <Redirect to={'/profile'}/>}/>\r\n\r\n                                <Route path='/dialogs'\r\n                                       render={withSuspense(DialogsContainer)}/>\r\n\r\n                                <Route path='/profile/:userId?'\r\n                                       render={() => <ProfileContainer/>}/>\r\n\r\n                                <Route path='/developers'\r\n                                       render={withSuspense(UsersContainer)}/>\r\n\r\n\r\n                                <Route path='/login'\r\n                                       render={() => <Login/>}/>\r\n\r\n                                <Route path='*'\r\n                                       render={() => <div>404 NOT FOUND </div>}/>\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}> A small social network </Footer>\r\n            </Layout>\r\n\r\n            // <div className='app-wrapper'>\r\n            //     <HeaderContainer/>\r\n            //     <Navbar/>\r\n            //     <div className='app-wrapper-content'>\r\n            //         <Switch>\r\n            //             <Route exact path='/'\r\n            //                    render={() => <Redirect to={'/profile'}/>}/>\r\n            //\r\n            //             <Route path='/dialogs'\r\n            //                    render={withSuspense(DialogsContainer)}/>\r\n            //\r\n            //             <Route path='/profile/:userId?'\r\n            //                    render={() => <ProfileContainer/>}/>\r\n            //\r\n            //             <Route path='/users'\r\n            //                    render={withSuspense(UsersContainer)}/>\r\n            //\r\n            //\r\n            //             <Route path='/login'\r\n            //                    render={() => <Login/>}/>\r\n            //\r\n            //             <Route path='*'\r\n            //                    render={() => <div>404 NOT FOUND </div>}/>\r\n            //         </Switch>\r\n            //     </div>\r\n            // </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst MainApp = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}\r\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from \"./App\";\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3Q-ht\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1bido\",\"input\":\"ProfileInfo_input__2A0pH\",\"contact\":\"ProfileInfo_contact__1g2NM\",\"editForm\":\"ProfileInfo_editForm__2NZO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1ZIfB\",\"error\":\"FormsControls_error__2JwnM\",\"formSummaryError\":\"FormsControls_formSummaryError__1TRnS\"};","////Validator\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} sumbol`\r\n    return undefined;\r\n}\r\n"],"sourceRoot":""}